dependencies {
    if (rootProject.ext.dependenciesC.containsKey(project))
        rootProject.ext.dependenciesC.get(project).split(";").each { String dep ->
            compileOnly rootProject.ext.dependencies.get(dep)
        }
    if (rootProject.ext.dependenciesI.containsKey(project))
        rootProject.ext.dependenciesI.get(project).split(";").each { String dep ->
            implementation rootProject.ext.dependencies.get(dep)
        }
    if (rootProject.ext.dependenciesA.containsKey(project))
        rootProject.ext.dependenciesA.get(project).split(";").each { String dep ->
            annotationProcessor rootProject.ext.dependencies.get(dep)
        }
}

tasks.withType(Jar) {
    writeProcessors()
}

tasks.withType(JavaCompile){
    targetCompatibility = 8
    sourceCompatibility = 8
    options.compilerArgs.removeAll(['--release', '8'])
    options.fork = true
}